#include <cstdio>
#include <vector>
#include <queue>

using namespace std;

const int MAX = 100;

int n , m;
vector <int> myGraph[MAX];

void BFS(){
    //1. 시작점을 큐에다가 삽입
    //2. 시작점을 색칠
    //BFS 시작
    
    //3. 큐에서 하나를 뺸다. 뺀것이 우리의 현재위치
    //4. 인접한 모든 정점에게 방문했는지 물어보고
    // 방문을 하지 않았다면 , 색칠을 하고 큐에 삽입
    //5. 모두 완료했다면 다시 3.으로 돌아간다.
    
    bool check[MAX] = {0,}; //check[x] = true면 x가 색칠이 됨.
    queue <int> Queue;
    
    //Queue.push(x);  // x를 큐에 삽입
    //Queue.pop();    // 큐의 맨 앞에 있는 원소를 제거
    //Queue.front(); //맨 앞에 있는 원소를 반환
    //Queue.empty(); //비었으면 true반환
    
    Queue.push(1);
    check[1] = true;
    
    while(!Queue.empty()){
        int current = Queue.front();
        Queue.pop();
        
        printf("%d " ,current);
        
        for(int i = 0; i < myGraph[current].size(); i++){
            int next = myGraph[current][i];
            //current -- next
            
            if(check[next] == false){
                check[next] = true;
                Queue.push(next);
            }
        }
        
        
    }
    
    
}

int main(){
    scanf("%d %d" , &n , &m);
    
    for(int i = 0; i < m; i++){
        int a , b;
        
        scanf("%d %d", &a,&b);
        
        myGraph[a].push_back(b);
        myGraph[b].push_back(a);
    }
    BFS();
    
    return 0;
}
