import java.util.*;

public class Main{

    static int[] dx = {0,1,0,-1};
    static int[] dy = {1,0,-1,0};
    public static int n;
    public static int map[][];
    public static boolean visited[][];
    public static int money;
    public static int min = 100000;

    public static void bfs(int x , int y){
        Queue<Integer> qx = new LinkedList<Integer>();
        Queue<Integer> qy = new LinkedList<Integer>();

        qx.add(x);
        qy.add(y);

        while(!qx.isEmpty() && !qy.isEmpty()){
            x = qx.poll();
            y = qy.poll();
            visited[x][y] = true;
            money += 100;

            for(int i = 0; i < 4; i++){

                int nx = x + dx[i];
                int ny = y + dy[i];

                if(nx >= 0 && ny >= 0 && nx < n && ny < n){
                    if(map[nx][ny] == 0 && visited[nx][ny] == false){
                        qx.add(nx);
                        qy.add(ny);
                        if(nx == x && ny > y)
                            money += 600;
                        else
                            money += 100;
                        visited[nx][ny] = true;
                    }

                }

            }
            if(min > money)
                min = money;
        }
        min += 100;
    }

    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();

        map = new int[26][26];
        visited = new boolean[26][26];

        for(int i = 0; i < n; i++){
            String temp = sc.next();
            for(int j = 0; j < n; j++){
                map[i][j] = temp.charAt(j) - 48;
            }
        }
        bfs(0,0);
        System.out.print(min);

    }
}
