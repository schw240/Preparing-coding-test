class Solution:
    def myAtoi(self, s: str) -> int:
        
# 선행 공백을 읽고 무시하십시오.
# 다음 문자 (문자열 끝에 아직없는 경우)가 '-'또는 '+'인지 확인하십시오. 둘 중 하나라면이 문자를 읽으십시오. 최종 결과가 각각 음수인지 양수인지 결정합니다. 둘 다 존재하지 않으면 결과가 긍정적이라고 가정합니다.
# 숫자가 아닌 다음 문자 또는 입력 끝에 도달 할 때까지 다음 문자를 읽습니다. 나머지 문자열은 무시됩니다.
# 이 숫자를 정수로 변환합니다 (예 : "123"-> 123, "0032"-> 32). 읽은 숫자가 없으면 정수는 0입니다. 필요에 따라 부호를 변경합니다 (2 단계에서).
# 정수가 32 비트 부호있는 정수 범위 [-231, 231-1]를 벗어나면 범위에 남아 있도록 정수를 고정합니다. 특히 -231보다 작은 정수는 -231로 클램핑하고 231-1보다 큰 정수는 231-1로 클램핑해야합니다.
# 최종 결과로 정수를 반환합니다.

        if s == "":
            return 0
        
        s = s.strip()
        flag = 1
        
        
        if len(s) > 0 and s[0] == '-':
            flag = -1
            s = s[1:]
        elif len(s) > 0 and s[0] == '+':
            flag = 1
            s = s[1:]
         
        num = 0
        for c in s:
            print(c)
            if c.isdigit():
                num = (num*10)+int(c)
            else:
                break
                
        res = (num*flag)     
        if res>=(2**31):
            return (2**31)-1
        elif res<-(2**31):
            return -(2**31)
        return res